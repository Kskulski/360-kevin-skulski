{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleSubmit","event","console","log","state","preventDefault","url","week","split","action","lastName","axios","get","then","response","catch","error","handleChange","target","className","weekNumber","value","setState","reflection","weeks","Array","i","length","toString","onSubmit","this","placeholder","onChange","map","c","type","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSA0EeA,E,kDArEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,aAAe,SAACC,GACdC,QAAQC,IAAI,EAAKC,OACjBH,EAAMI,iBACN,IAAIC,EAAM,8EACS,EAAKF,MAAMG,KAAKC,MAAM,KAEf,SAAtB,EAAKJ,MAAMK,SACbH,EAAMA,EAAM,SAAW,EAAKF,MAAMM,SAAW,SAAW,EAAKN,MAAMG,KACnEI,IAAMC,IAAIN,GACPO,MAAK,SAAAC,GACJZ,QAAQC,IAAIW,MAEbC,OAAM,SAAAC,GACLd,QAAQC,IAAIa,QAvBD,EA4BnBC,aAAe,SAAChB,GAEd,GADAA,EAAMI,iBACyB,SAA3BJ,EAAMiB,OAAOC,UAAsB,CACrC,IAAMC,EAAanB,EAAMiB,OAAOG,MAAMb,MAAM,KAC5C,EAAKc,SAAL,eAAgBrB,EAAMiB,OAAOC,UAAYC,EAAW,UAEpD,EAAKE,SAAL,eAAgBrB,EAAMiB,OAAOC,UAAYlB,EAAMiB,OAAOG,SAhCxD,EAAKjB,MAAQ,CACXM,SAAU,GACVH,KAAM,GACNE,OAAQ,GACRc,WAAY,IANG,E,0CAsCnB,WAGE,IAFA,IACMC,EAAQ,IAAIC,MAAM,IACfC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAChCF,EAAME,GAAK,SAAWA,EAAI,GAAGE,WAE/B,OACE,qBAAKT,UAAU,MAAf,SACE,uBAAMU,SAAYC,KAAK9B,aAAvB,UACE,qDACA,+CACA,uBAAOmB,UAAU,WAAWY,YAAY,0BAA0BC,SAAUF,KAAKb,eACjF,0CACA,yBAAQE,UAAU,OAAOa,SAAUF,KAAKb,aAAxC,UACE,wBAAQI,MAAM,GAAd,6BACCG,EAAMS,KAAI,SAAAC,GAAC,OAAI,iCAAiBA,GAAJA,SAE/B,4CACA,yBAAQf,UAAU,SAASa,SAAUF,KAAKb,aAA1C,UACE,wBAAQI,MAAM,GAAd,4BAlBY,CAAC,OAAQ,UAmBRY,KAAI,SAAAC,GAAC,OAAI,iCAAiBA,GAAJA,SAErC,gDACA,uBAAOf,UAAU,aAAaY,YAAY,gCAAgCC,SAAUF,KAAKb,eACzF,wBAAQkB,KAAK,SAAb,6B,GA/DQC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.652ccd23.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      lastName: '',\n      week: '',\n      action: '',\n      reflection: ''\n    }\n  }\n\n  handleSubmit = (event) => {\n    console.log(this.state)\n    event.preventDefault()\n    var url = 'https://kskulski-reflection-recorder-api.azurewebsites.net/api/HttpTrigger1'\n    const weekNumber = this.state.week.split(' ')\n\n    if (this.state.action === 'Read') {\n      url = url + '?name=' + this.state.lastName + '&week=' + this.state.week\n      axios.get(url)\n        .then(response => {\n          console.log(response)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n  }\n\n  handleChange = (event) => {\n    event.preventDefault()\n    if (event.target.className === 'week') {\n      const weekNumber = event.target.value.split(' ')\n      this.setState({[event.target.className]: weekNumber[1]})\n    } else {\n      this.setState({[event.target.className]: event.target.value})\n    }\n  }\n\n  render() {\n    const requestType = ['Read', 'Submit']\n    const weeks = new Array(16)\n    for (var i = 0; i < weeks.length; i++) {\n      weeks[i] = 'Week ' + (i + 1).toString();\n    }\n    return (\n      <div className='App'>\n        <form onSubmit = {this.handleSubmit}>\n          <h2>Submit a Reflection</h2>\n          <label>Last Name:</label>\n          <input className='lastName' placeholder='Enter your last name...' onChange={this.handleChange}/>\n          <label>Week:</label>\n          <select className='week' onChange={this.handleChange}>\n            <option value=''>Select the Week</option>\n            {weeks.map(c => <option key={c}>{c}</option>)}\n          </select>\n          <label>Action:</label>\n          <select className='action' onChange={this.handleChange}>\n            <option value=''>Read or Submit</option>\n            {requestType.map(c => <option key={c}>{c}</option>)}\n          </select>\n          <label>Reflection:</label>\n          <input className='reflection' placeholder='Enter your reflection here...' onChange={this.handleChange}/>\n          <button type='submit'>Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}